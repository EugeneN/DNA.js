fs = require 'fs'
path = require 'path'
async = require 'async'
STITCH = require 'stitch'
CS = require 'coffee-script'

ENC = 'utf8'
COFFEE_EXT = /\.coffee$/
JS_EXT = '.js'

SRC_DIR = path.resolve __dirname, './src'
TMP_STITCH_DIR = path.resolve __dirname, './stitch-build'

say = (a...) -> console.log.apply console, a

task 'cafebuild', 'build with cafe', (cafebuild_cb) ->
    unless process.env.CAFE_TMP_BUILD_ROOT and process.env.CAFE_TARGET_FN
        throw "No CAFE_TMP_BUILD_ROOT and/or CAFE_TARGET_FN found in env"

    TARGET_FN = (path.resolve process.env.CAFE_TMP_BUILD_ROOT,
                              process.env.CAFE_TARGET_FN)

    compile_cs_file = (fn, cb) ->
        fs.readFile (path.resolve SRC_DIR, fn), (err, data) ->
            throw err if err

            js_fn = path.resolve TMP_STITCH_DIR, (fn.replace COFFEE_EXT, JS_EXT)

            fs.writeFile js_fn, (CS.compile data.toString()), ENC, (err) ->
                throw err if err
                cb()

    stitch = (dirs, target_fn, cb) ->
        pkg = STITCH.createPackage paths: dirs
        pkg.compile (err, stitched_src) ->
            throw err if err
            fs.writeFile target_fn, stitched_src, ENC, cb

    fs.readdir SRC_DIR, (err, files) ->
        throw err if err

        async.map files, compile_cs_file, (err, results) ->
            stitch [TMP_STITCH_DIR], TARGET_FN, (err) ->
                say '>>>>>', cafebuild_cb
                # cafebuild_cb()



